/*
 * Copyright (C) 2020. Jacob Sandin och imCode Partner AB - All Rights Reserved.
 * This file is part of the project dbanonymizer., and you may use, distribute and modify this code under the licence agreement terms you have with imCode Partner AB for the specific project.
 *
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.04.24 at 08:14:17 PM CEST 
//


package com.imcode.internal.imAnonymizer.parser.xml;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Root }
     * 
     */
    public Root createRoot() {
        return new Root();
    }

    /**
     * Create an instance of {@link Root.Tables }
     * 
     */
    public Root.Tables createRootTables() {
        return new Root.Tables();
    }

    /**
     * Create an instance of {@link Root.Tables.Table }
     * 
     */
    public Root.Tables.Table createRootTablesTable() {
        return new Root.Tables.Table();
    }

    /**
     * Create an instance of {@link Root.Tables.Table.Fields }
     * 
     */
    public Root.Tables.Table.Fields createRootTablesTableFields() {
        return new Root.Tables.Table.Fields();
    }

    /**
     * Create an instance of {@link Root.Resources }
     * 
     */
    public Root.Resources createRootResources() {
        return new Root.Resources();
    }

    /**
     * Create an instance of {@link Root.Resources.Statics }
     * 
     */
    public Root.Resources.Statics createRootResourcesStatics() {
        return new Root.Resources.Statics();
    }

    /**
     * Create an instance of {@link Root.Resources.Files }
     * 
     */
    public Root.Resources.Files createRootResourcesFiles() {
        return new Root.Resources.Files();
    }

    /**
     * Create an instance of {@link Root.Properties }
     * 
     */
    public Root.Properties createRootProperties() {
        return new Root.Properties();
    }

    /**
     * Create an instance of {@link Root.Tables.Table.Fields.Field }
     * 
     */
    public Root.Tables.Table.Fields.Field createRootTablesTableFieldsField() {
        return new Root.Tables.Table.Fields.Field();
    }

    /**
     * Create an instance of {@link Root.Resources.Statics.Static }
     * 
     */
    public Root.Resources.Statics.Static createRootResourcesStaticsStatic() {
        return new Root.Resources.Statics.Static();
    }

    /**
     * Create an instance of {@link Root.Resources.Files.File }
     * 
     */
    public Root.Resources.Files.File createRootResourcesFilesFile() {
        return new Root.Resources.Files.File();
    }

}
